name: Action Version Check

on:
  schedule:
    - cron: '0 8 * * MON'  # Weekly on Monday at 8 AM UTC
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  issues: write

jobs:
  scan-actions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Scan workflow files for actions
        id: scan
        run: |
          echo "Scanning workflow files for GitHub Actions..."
          
          # Create a summary of all actions found
          echo "## Actions Found in Workflows" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| File | Action | Current Version |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|-----------------|" >> $GITHUB_STEP_SUMMARY
          
          # Find all workflow files and extract actions
          find .github/workflows -name "*.yml" -o -name "*.yaml" | while read file; do
            echo "Scanning: $file"
            grep -n "uses:" "$file" | while read line; do
              if [[ $line == *"@"* ]] && [[ $line != *"./"* ]]; then
                action_full=$(echo "$line" | sed 's/.*uses: *//; s/ *$//' | tr -d '"')
                action_name=$(echo "$action_full" | cut -d@ -f1)
                action_version=$(echo "$action_full" | cut -d@ -f2)
                filename=$(basename "$file")
                echo "| $filename | \`$action_name\` | \`$action_version\` |" >> $GITHUB_STEP_SUMMARY
              fi
            done
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Check each action's repository for newer versions" >> $GITHUB_STEP_SUMMARY
          echo "2. Review changelogs for breaking changes" >> $GITHUB_STEP_SUMMARY
          echo "3. Update versions manually after testing" >> $GITHUB_STEP_SUMMARY
          echo "4. Dependabot will also create PRs automatically" >> $GITHUB_STEP_SUMMARY

  check-action-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Check for outdated actions
        id: check
        run: |
          echo "Checking for outdated GitHub Actions..."
          
          # Find all workflow files
          workflow_files=$(find .github/workflows -name "*.yml" -o -name "*.yaml")
          
          outdated_actions=""
          
          for file in $workflow_files; do
            echo "Checking $file..."
            
            # Extract action uses with versions
            grep -n "uses:" "$file" | while read -r line; do
              line_num=$(echo "$line" | cut -d: -f1)
              action_ref=$(echo "$line" | sed 's/.*uses: *//; s/ *$//')
              
              # Skip local actions or actions without version
              if [[ "$action_ref" == ./* ]] || [[ "$action_ref" != *"@"* ]]; then
                continue
              fi
              
              action_name=$(echo "$action_ref" | cut -d@ -f1)
              current_version=$(echo "$action_ref" | cut -d@ -f2)
              
              echo "Found: $action_name@$current_version in $file:$line_num"
            done
          done

      - name: Create issue for manual review
        if: github.event_name == 'schedule'
        uses: actions/github-script@v8
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            const title = `ðŸ”„ Weekly GitHub Actions Version Check - ${date}`;
            
            // Check if similar issue already exists
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'github-actions'
            });
            
            const hasExistingIssue = existingIssues.data.some(issue => 
              issue.title.includes('Weekly GitHub Actions Version Check')
            );
            
            if (hasExistingIssue) {
              console.log('Similar issue already exists, skipping creation');
              return;
            }
            
            const body = [
              '## Weekly GitHub Actions Version Check',
              '',
              'This is an automated reminder to check for GitHub Actions updates.',
              '',
              '### Current Actions in Use:',
              '',
              '- `actions/checkout@v5` - [Releases](https://github.com/actions/checkout/releases)',
              '- `docker/setup-qemu-action@v3` - [Releases](https://github.com/docker/setup-qemu-action/releases)',
              '- `docker/setup-buildx-action@v3` - [Releases](https://github.com/docker/setup-buildx-action/releases)',
              '- `docker/login-action@v3` - [Releases](https://github.com/docker/login-action/releases)',
              '- `docker/build-push-action@v6` - [Releases](https://github.com/docker/build-push-action/releases)',
              '- `actions/github-script@v8` - [Releases](https://github.com/actions/github-script/releases)',
              '',
              '### Update Process:',
              '',
              '1. **Check releases**: Click the links above to see if newer versions are available',
              '2. **Review changelogs**: Look for breaking changes or security fixes',
              '3. **Test updates**: Update versions in a test branch first',
              '4. **Apply updates**: Update workflow files after testing',
              '',
              '### Automation:',
              '',
              'âœ… Dependabot is configured to create PRs automatically',
              'ðŸ“Š Workflow summaries show current action versions',
              '',
              '### Resources:',
              '',
              '- [GitHub Actions Marketplace](https://github.com/marketplace?type=actions)',
              '- [Security Best Practices](https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions)',
              '',
              '---',
              '',
              '*Close this issue after reviewing. A new one will be created next week.*'
            ].join('\n');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['github-actions', 'maintenance', 'weekly-check']
            });
            
            console.log('Created weekly GitHub Actions version check issue');