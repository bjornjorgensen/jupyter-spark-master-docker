name: Build and Push Spark Images

on:
  push:
    branches:
      - "main"
  schedule:
    - cron: "0 7 * * *"  # Daily at 7 AM UTC
  workflow_dispatch:  # Allow manual triggering

# Action versions - Update these regularly by checking:
# - actions/checkout: https://github.com/actions/checkout/releases
# - docker/setup-qemu-action: https://github.com/docker/setup-qemu-action/releases  
# - docker/setup-buildx-action: https://github.com/docker/setup-buildx-action/releases
# - docker/login-action: https://github.com/docker/login-action/releases
# - docker/build-push-action: https://github.com/docker/build-push-action/releases
# - actions/github-script: https://github.com/actions/github-script/releases

env:
  REGISTRY: docker.io
  NAMESPACE: bjornjorgensen

jobs:
  spark-builder:
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      build-date: ${{ steps.date.outputs.date }}
    steps:
        - name: Checkout
          uses: actions/checkout@v4
          
        - name: Set build date
          id: date
          run: echo "date=$(date +'%d%m%Y')" >> $GITHUB_OUTPUT
          
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
          
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
          with:
            driver-opts: |
              image=moby/buildkit:buildx-stable-1
  
        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
  
        - name: Build and push spark-builder
          id: build
          uses: docker/build-push-action@v6
          with:
            context: spark-builder/.
            platforms: linux/amd64
            push: true
            tags: |
              ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/spark-builder:${{ steps.date.outputs.date }}
              ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/spark-builder:latest
            cache-from: type=gha
            cache-to: type=gha,mode=max
            labels: |
              org.opencontainers.image.title=Spark Builder
              org.opencontainers.image.description=Apache Spark builder image with master branch
              org.opencontainers.image.version=${{ steps.date.outputs.date }}
              org.opencontainers.image.created=${{ steps.date.outputs.date }}
              org.opencontainers.image.revision=${{ github.sha }}
              org.opencontainers.image.source=${{ github.repositoryUrl }}

  spark-worker-and-driver:
    needs: spark-builder
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: [worker, driver]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:buildx-stable-1
            
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push ${{ matrix.component }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.component }}/.
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/spark-${{ matrix.component }}:${{ needs.spark-builder.outputs.build-date }}
            ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/spark-${{ matrix.component }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.title=Spark ${{ matrix.component }}
            org.opencontainers.image.description=Apache Spark ${{ matrix.component }} image with JupyterLab
            org.opencontainers.image.version=${{ needs.spark-builder.outputs.build-date }}
            org.opencontainers.image.created=${{ needs.spark-builder.outputs.build-date }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
